/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.47
 * Generated at: 2020-01-04 13:50:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.smart;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class smart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>스마트 가전센터</title>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/jquery/jquery-3.4.1.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("div.container{\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 29%;\r\n");
      out.write("\theight:300px;\r\n");
      out.write("    margin: 10px;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("\tbackground:lightgrey;\r\n");
      out.write("\ttext-align:center;\r\n");
      out.write("}\r\n");
      out.write("table {\r\n");
      out.write("\tborder:1px solid;\r\n");
      out.write("\tmargin:auto;\r\n");
      out.write("}\r\n");
      out.write("td,th {\r\n");
      out.write("\tborder:1px solid;\r\n");
      out.write("}\r\n");
      out.write("span#time{\r\n");
      out.write("\ttext-decoration:underline;\r\n");
      out.write("\tmargin: 15px;\r\n");
      out.write("    display: block;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("$(()=>{\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"");
      out.print(request.getContextPath());
      out.write("/smart/rankOrder\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: data =>{\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlet $table = $(\"<table></table>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(data).each((idx,rank)=>{\r\n");
      out.write("\t\t\t\tlet html = \"<tr><td>\"+rank.rank+\"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\"+rank.pname+\"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\"+rank.totalAmount+\"</td></tr>\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$table.append(html);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#rank-list\").html($table);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: (jqxhr, textStatus, errorThrown) =>{\r\n");
      out.write("\t\t\tconsole.log(\"ajax 처리실패.\",jqxhr, textStatus, errorThrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>스마트 가전 센터 주문페이지</h1>\r\n");
      out.write("<p>\r\n");
      out.write("\t1. ajax를 이용해서 제품주문을 처리하고, 실시간 판매현황(최근5건)에 출력하세요. <br />\r\n");
      out.write("\t2. 10초마다 판매랭킹리스트(상위5개제품과 누적판매량)를 갱신하는 ajax함수를 작성하세요. <br />\r\n");
      out.write("\t(bonus) 현재시각을 표시하세요.\r\n");
      out.write("</p>\r\n");
      out.write("<div id=\"order-container\" class=\"container\">\r\n");
      out.write("\t<h2>주문</h2>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>제품명</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<select name=\"pname\" id=\"pname\" required>\r\n");
      out.write("\t\t\t\t\t<option value=\"iPhoneX\">iPhoneX</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"iPhone7\">iPhone7</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"iPhone7Plus\">iPhone7Plus</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"GalaxyNote8\">GalaxyNote8</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"Galaxy8\">Galaxy8</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"샤오미맥스2\">샤오미맥스2</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"LGV30\">LGV30</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>주문량</th>\r\n");
      out.write("\t\t\t<td><input type=\"number\" id=\"amount\" name=\"amount\" min=\"1\" value=\"1\" required></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" id=\"btn-order\" value=\"주문\" />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- 주문클릭시 DB에 등록 -->\r\n");
      out.write("<script>\r\n");
      out.write("$(()=>{\r\n");
      out.write("\ttimer = setInterval( function () {\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl: \"");
      out.print(request.getContextPath());
      out.write("/smart/rankOrder\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdataType: \"json\",\r\n");
      out.write("\t\t\tsuccess: data =>{\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlet $table = $(\"<table></table>\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(data).each((idx,rank)=>{\r\n");
      out.write("\t\t\t\t\tlet html = \"<tr><td>\"+rank.rank+\"</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td>\"+rank.pname+\"</td>\";\r\n");
      out.write("\t\t\t\t\thtml += \"<td>\"+rank.totalAmount+\"</td></tr>\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$table.append(html);\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#rank-list\").html($table);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror: (jqxhr, textStatus, errorThrown) =>{\r\n");
      out.write("\t\t\t\tconsole.log(\"ajax 처리실패.\",jqxhr, textStatus, errorThrown);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t},10000);\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("$(\"#btn-order\").click(e=>{\r\n");
      out.write("\tvar $pname = $(\"#pname\").val().trim();\r\n");
      out.write("\tvar $amount = $(\"#amount\").val().trim();\r\n");
      out.write("\tconsole.log($pname, $amount);\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"");
      out.print(request.getContextPath());
      out.write("/smart/insertOrder\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdata: {pname: $pname, amount: $amount},\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: data =>{\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tlet $table = $(\"<table></table>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(data).each((idx,product)=>{\r\n");
      out.write("\t\t\t\tlet html = \"<tr><td>\"+product.pname+\"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\"+product.amount+\"</td>\";\r\n");
      out.write("\t\t\t\thtml += \"<td>\"+product.pdate+\"</td></tr>\";\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$table.append(html);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t$(\"#order-list\").html($table);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: (jqxhr, textStatus, errorThrown) =>{\r\n");
      out.write("\t\t\tconsole.log(\"ajax 처리실패.\",jqxhr, textStatus, errorThrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<h2>주문리스트</h2>\r\n");
      out.write("\t<div id=\"order-list\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<h2>인기순위</h2>\r\n");
      out.write("\t<span id=\"time\"></span>\r\n");
      out.write("\t<div id=\"rank-list\"></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
